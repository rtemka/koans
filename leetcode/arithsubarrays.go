package leetcode

// Целочисленный массив называется арифметическим, если он состоит как минимум из трех элементов
// и если разница между любыми двумя последовательными элементами одинакова.

// Например, [1,3,5,7,9], [7,7,7,7] и [3,-1,-5,-9] являются арифметическими последовательностями.
// Учитывая целочисленный массив nums, вернуть количество арифметических подмассивов nums.

// Подмассив — это непрерывная подпоследовательность массива.

// Пример 1:

// Ввод: nums = [1,2,3,4]
// Выход: 3
// Объяснение: у нас есть 3 арифметических среза в nums: [1, 2, 3], [2, 3, 4] и собственно [1,2,3,4].

// Пример 2:

// Ввод: nums = [1]
// Выход: 0

func numberOfArithmeticSlices(nums []int) int {
	if len(nums) < 3 {
		return 0
	}
	// берём первый, второй и последний элементы
	f, s, l := nums[0], nums[1], nums[len(nums)-1]

	var diff = diff(f, s) // разница между элементами
	var pl int            // предполагаемое значене последнего элемента

	if f > l {
		pl = f - ((len(nums) - 1) * diff)
	} else {
		pl = f + ((len(nums) - 1) * diff)
	}

	if pl != l {
		return 0
	}
	if len(nums) == 3 {
		return 1
	}

	return len(nums) - 1
}

func diff(f, s int) int {
	if f < 0 && s < 0 {
		return f - s
	}
	if f < 0 || s < 0 {
		return abs(f) + abs(s)
	}

	return abs(s) - abs(f)
}

func abs(x int) int {
	if x < 0 {
		return -x
	}
	return x
}
